name: ci

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  FRB_MAIN_DART_VERSION: 3.2.0
  FRB_MAIN_FLUTTER_VERSION: 3.19.1

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - uses: dart-lang/setup-dart@v1
        with:
          sdk: ${{ env.FRB_MAIN_DART_VERSION }}
          architecture: x64
      - uses: subosito/flutter-action@v2
        with:
          cache: true
          flutter-version: ${{ env.FRB_MAIN_FLUTTER_VERSION }}
      - name: Install dependencies
        run: flutter pub get
      - name: Analyze project source
        run: dart analyze
      - name: Run tests
        run: flutter test --coverage

  build-android:
    name: Build ${{ matrix.package }} Android on ${{ matrix.os }} and Flutter ${{ matrix.flutter }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-22.04]
        flutter: ["3.19.1"]
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-java@v2
        with:
          distribution: "zulu" # OpenJDK
          java-version: "17"
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ matrix.flutter }}
      - name: Build Android
        run: flutter build apk --flavor prod lib/main_prod.dart 
        working-directory: lib

#  build-ios:
#    name: Build ${{ matrix.package }} iOS on ${{ matrix.os }} with Xcode ${{ matrix.xcode }} and Flutter ${{ matrix.flutter }}
#    runs-on: ${{ matrix.os }}
#    strategy:
#      matrix:
#        os: [macos-14]
#        xcode: ["15.2"]
#        flutter: ["3.19.1"]
#        exclude:
#          - os: macos-13
#            xcode: 14.3.1
#    steps:
#      - uses: actions/checkout@v1
#      - uses: actions/setup-java@v1
#        with:
#          java-version: "12.x"
#      - name: Xcode select
#        run: sudo xcode-select -s /Applications/Xcode_${{ matrix.xcode }}.app
#      - uses: subosito/flutter-action@v2
#        with:
#          flutter-version: ${{ matrix.flutter }}
#      - name: Flutter doctor (version check)
#        run: flutter doctor
#      - name: Build iOS
#        run: flutter build ipa --flavor prod lib/main_prod.dart --export-method development
#        working-directory: lib
#        env:
#          OTHER_SWIFT_FLAGS: "-warnings-as-errors"
#          DEVELOPER_DIR: /Applications/Xcode_${{ matrix.xcode }}.app/Contents/Developer
